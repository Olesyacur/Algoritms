'''Алла захотела, чтобы у неё под окном были узкие клумбы с тюльпанам. На
схеме земельного участка клумбы обозначаются просто горизонтальными отрезками,
лежащими на одной прямой. Для ландшафтных работ было нанято n садовников.
Каждый из них обрабатывал какой-то отрезок на схеме. Процесс был организован
не очень хорошо, иногда один и тот же отрезок или его часть могли быть
обработаны сразу несколькими садовниками. Таким образом, отрезки,
обрабатываемые двумя разными садовниками, сливаются в один. Непрерывный
обработанный отрезок затем станет клумбой. Нужно определить границы будущих
клумб.
Рассмотрим примеры.
Пример 1:
Два одинаковых отрезка [7,8] и [7,8] сливаются в один, но потом их накрывает
отрезок [6,10]. Таким образом, имеем две клумбы с координатами [2,3] и [6,10].

Формат ввода
В первой строке задано количество садовников n. Число садовников не
превосходит 100000.
В следующих n строках через пробел записаны координаты клумб в формате: start
end, где start —– координата начала, end —– координата конца. Оба числа целые,
неотрицательные и не превосходят 107. start строго меньше, чем end.

Формат вывода
Нужно вывести координаты каждой из получившихся клумб в отдельных строках.
Данные должны выводится в отсортированном порядке —– сначала клумбы с меньшими
координатами, затем —– с бОльшими.'''

def interval_flowerbed(flowerbeds, count_gardener):

    result = []
    start, end = flowerbeds[0]
    k = 1

    while k < count_gardener:
        if start <= flowerbeds[k][0] <= end:
            end = max(end, flowerbeds[k][1])
            k += 1
        else:
            result.append([start, end])
            start, end = flowerbeds[k]
            k += 1
    
    result.append([start, end])
    [print(*_) for _ in result]

if __name__ == '__main__':
    count_gardener = int(input())
    flowerbeds = []
    for element in range(count_gardener):
        line = list(map(int, input().split()))
        flowerbeds.append(line)
    flowerbeds.sort()
    interval_flowerbed(flowerbeds, count_gardener)
    