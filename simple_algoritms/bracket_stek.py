'''Вот какую задачу Тимофей предложил на собеседовании одному из кандидатов.
Если вы с ней ещё не сталкивались, то наверняка столкнётесь –— она довольно

популярная.

Дана скобочная последовательность. Нужно определить, правильная ли она.

Будем придерживаться такого определения:

пустая строка —– правильная скобочная последовательность;
правильная скобочная последовательность, взятая в скобки одного типа, –—
правильная скобочная последовательность;
правильная скобочная последовательность с приписанной слева или справа
правильной скобочной последовательностью —– тоже правильная.
На вход подаётся последовательность из скобок трёх видов: [], (), {}.
Напишите функцию is_correct_bracket_seq, которая принимает на вход скобочную
последовательность и возвращает True, если последовательность правильная, а
иначе False.

Формат ввода
На вход подаётся одна строка, содержащая скобочную последовательность. Скобки
записаны подряд, без пробелов.

Формат вывода
Выведите «True» или «False».'''



class Stack:
    def __init__(self):
        self.check_brackets = []
    
    def is_correct_bracket_seq(self):
        d_brackets = {
            '(': ')',
            '[': ']',
            '{': '}'
        }
        #string = str(input())

        for simbol in string:
            if simbol in d_brackets.keys():
               self.check_brackets.append(simbol)
            elif self.check_brackets == [] or simbol != d_brackets[
                self.check_brackets.pop()]:
                return False
        return self.check_brackets == []

stack = Stack()
string = str(input())
print(getattr(stack, 'is_correct_bracket_seq')())
